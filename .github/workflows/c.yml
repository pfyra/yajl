name: C CI

# xxx could be written as:  "on: [push, pull_request]"
on:
  push:
    branches: [ bsdmake ]
  pull_request:
    branches: [ bsdmake ]

jobs:
  regressionTest:
    name: "${{ matrix.os }} ${{ matrix.cc }} ${{ matrix.make }} ${{ matrix.sanitizer }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macOS-latest ] # ubuntu-18.04, netbsd!!!
        cc: [ gcc, clang ]
        make: [ bmake, pmake, make ]
#        sanitizer: [ NO_SANI, USE_ASAN, USE_UBSAN, USE_LEAKSAN ]
        sanitizer: [ NO_SANI ]
        exclude:
        - os: macOS-latest
          # it's clang anyway
          cc: gcc
        - os: macOS-latest
          # pmake is unavailable, make is gmake
          make: [ pmake, make ]
        - os: ubuntu-18.04
          # it's gmake
          make: make
        - os: ubuntu-latest
          # it's gmake
          make: make
    env:
      MKDOC: yes
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: dependencies (Ubuntu-latest)
      if: matrix.os == 'ubuntu-latest'
      run: |
        uname -a
        sudo apt-get install pmake bmake cxref
        ${{ matrix.cc }} --version
    - name: dependencies (Ubuntu-18.04)
      if: matrix.os == 'ubuntu-18.04'
      run: |
        uname -a
        sudo apt-get install pmake bmake cxref
        ${{ matrix.cc }} --version
      env:
        MKDOC: no
    - name: dependencies (MacOS-latest)
      if: matrix.os == 'macOS-latest'
      run: |
        uname -a
        brew install bmake
        ${{ matrix.cc }} --version
      env:
        MKDOC: no
    - name: dependencies (NetBSD-latest)
      if: matrix.os == 'netbsd-latest'
      run: |
        uname -a
        pkgin install cxref clang
        ${{ matrix.cc }} --version
    - name: builddir
      run: rm -rf build && mkdir build
    - name: build
      run: MAKEOBJDIRPREFIX=$(pwd)/build ${{ matrix.make }} -j 3 CC=${{ matrix.cc }} ${{ matrix.sanitizer }}=yes MKDOC=$MKDOC
    - name: distribution
      run: MAKEOBJDIRPREFIX=$(pwd)/build DESTDIR=$(pwd)/dist ${{ matrix.make }} -j 3 install MKDOC=$MKDOC
    - name: regression
      run: MAKEOBJDIRPREFIX=$(pwd)/build ${{ matrix.make }} regress ${{ matrix.sanitizer }}=yes MKDOC=$MKDOC
