# -*- makefile-bsdmake -*-
# $NetBSD$

# N.B.:  though this version of YAJL is diverging from the original, as yet it
# has no API (nor, so far as is known, any ABI) differences, thus is still
# "2.1.0"

PKGNAME=	yajl-2.1.0
PKGREVISION=	2
CATEGORIES=	devel textproc
DISTFILES=	# empty
#MASTER_SITES=	${MASTER_SITE_GITHUB:=robohack/}
#GITHUB_TAG=	v${PKGVERSION_NOREV}

# XXX cwrappers is currently still very buggy and elides the necessary
# "-I${.CURDIR}/../src" which must be added by YAJL's "Makefile.inc"
USE_CWRAPPERS=	no

MAINTAINER=	pkgsrc-users@NetBSD.org
HOMEPAGE=	http://lloyd.github.com/yajl/
COMMENT=	Small JSON library written in ANSI C
# "YAJL is released under the permissive ISC license."
LICENSE=	modified-bsd

BUILD_DEPENDS+=	cxref-[0-9]*:../../devel/cxref

USE_LANGUAGES=	c

USE_BSD_MAKEFILE=	yes
BSD_MAKE_BUILD_DIR=	${WRKDIR}/build
BUILD_MAKE_FLAGS=	MAKEOBJDIRPREFIX=${BSD_MAKE_BUILD_DIR}
TEST_MAKE_FLAGS=	${BUILD_MAKE_FLAGS}
INSTALL_MAKE_FLAGS=	${BUILD_MAKE_FLAGS}
INSTALL_TARGET=		includes install

# xxx this use of ${VAR:!cmd!} is quite ugly to have to do, but because it is
# evaluated lazily it deals the use, by the package's BSD Makefile, of the
# canonical form of ${WRKSRC} as a sub-directory of MAKEOBJDIRPREFIX.
#
# XXX Normally ${WRKSRC} would be canonicalised, but it may not be if
# ${WRKOBJDIR} is set, but not to a canonical path.  XXX Maybe ${WRKOBJDIR}
# should be forced into canonical form similarly....
#
CANONICAL_WRKSRC=		${WRKSRC:!cd ${WRKSRC} && ${PWD_CMD}!}
PKGCONFIG_OVERRIDE=		${BSD_MAKE_BUILD_DIR}/${CANONICAL_WRKSRC}/src/yajl.pc
PKGCONFIG_OVERRIDE_STAGE=	post-build

AUTO_MKDIRS=	yes

# totally automatic PLIST generation -- probably preferable?
#
#GENERATE_PLIST=	cd ${DESTDIR}${PREFIX}; \
#		${FIND} * \( -type f -or -type l \) | ${SORT};
#
GENERATE_PLIST+=	cd ${DESTDIR}${PREFIX} && \
		${FIND} share/doc/yajl/html \( -type f -or -type l \) | ${SORT};

.include "../../mk/bsd.prefs.mk"

PLIST_SUBST+=	PREFIX=${PREFIX:Q}

# N.B.:  the following depend on PKGMAKECONF=/etc/mk.conf or the moral equivalent
# xxx they are also not needed if pkgsrc is properly patched to do this itself!

PLIST_VARS+=	mkdebug
.if ${MKDEBUG:Uno} != "no" && !defined(NODEBUG)
PLIST.mkdebug=	yes
INSTALLATION_DIRS+=	libdata/debug/${LOCALBASE}/bin
INSTALLATION_DIRS+=	libdata/debug/${LOCALBASE}/libexec
INSTALLATION_DIRS+=	libdata/debug/${LOCALBASE}/sbin
.endif

PLIST_VARS+=	mkdebuglib
.if ${MKDEBUGLIB:Uno} != "no"
PLIST.mkdebuglib=	yes
INSTALLATION_DIRS+=	libdata/debug/${LOCALBASE}/lib
.endif

PLIST_VARS+=	mklint
.if ${MKLINT:Uno} != "no"
PLIST.mklint=	yes
.endif

PLIST_VARS+=	mkpic
.if ${MKPIC:Uno} != "no"
PLIST.mkpic=	yes
.endif

do-extract:
	${MKDIR} ${WRKSRC}
	${CP} -Rp ${FILESDIR}/* ${WRKSRC}/
	${RM} -rf ${WRKSRC}/CVS

do-configure:
	${MKDIR} ${BSD_MAKE_BUILD_DIR}

# how to get from there to here....
#
# Go to where you have cloned https://github.com/robohack/yajl to, copy this
# Makefile into your $pkgsrc/devel/yajl directory, go there, and build this
# target:
#
#	rm -rf build* dist*
#	make clean
#	cp Makefile.pkgsrc /usr/pkgsrc/devel/yajl/Makefile
#	cd /usr/pkgsrc/devel/yajl
#	make REPODIR=$OLDPWD setup-pkgsrc
#
REPODIR ?=	/work/woods/f-yajl
setup-pkgsrc:
	find ${FILESDIR} -type d \( -name CVS -or -name .git -or -name .svn \) -prune -or -type f ! -name '.*ignore' -print0 | xargs -0 rm
	cd ${REPODIR} && find . \( -type d \( -name CVS -or -name .git -or -name .svn -or -name build -or -name 'build-*' -or -name dest -or -name 'dest-*' \) -prune \) -or -type f ! -name '.#*' ! -name '#*#' ! -name '*~' ! -name '.*ignore' ! -name '[Tt][Aa][Gg][Ss]' -print | pax -rw ${FILESDIR}
	mv ${FILESDIR}/DESCR.pkgsrc ${PKGDIR}/DESCR
	mv ${FILESDIR}/Makefile.pkgsrc ${PKGDIR}/Makefile
	mv ${FILESDIR}/PLIST.pkgsrc ${PKGDIR}/PLIST
	mv ${FILESDIR}/buildlink3.mk.pkgsrc ${PKGDIR}/buildlink3.mk

.include "../../mk/bsd.pkg.mk"

# override INCSDIR for the project subdir....
INCSDIR=	${PREFIX}/include/${PKGBASE}
MAKE_ENV+=	INCSDIR=${INCSDIR:Q}
